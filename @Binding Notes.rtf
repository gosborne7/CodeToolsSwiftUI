{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red93\green216\blue255;\red208\green168\blue255;\red65\green161\blue192;\red208\green191\blue105;\red36\green38\blue41;
\red235\green236\blue237;\red13\green0\blue129;\red37\green127\blue159;\red104\green26\blue29;\red114\green121\blue129;
\red38\green38\blue38;\red255\green255\blue255;\red103\green183\blue164;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c36295\c84643\c99897;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81498\c74939\c41233;\cssrgb\c18824\c20000\c21176;
\cssrgb\c93725\c94118\c94510;\cssrgb\c6275\c6275\c58039;\cssrgb\c16863\c56863\c68627;\cssrgb\c49020\c15294\c15294;\cssrgb\c52157\c54902\c57647;
\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;\csgenericrgb\c40538\c71705\c64209;}
\margl1440\margr1440\vieww10980\viewh10820\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc\partightenfactor0

\f0\b\fs24 \cf0 \ul \ulc0 Notes On @State and @Binding\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b0 \cf0 \ulnone 1) Remember to declare @State variables with a value; e.g.,@State private var name: String = \'93\'94\
\
*******************************************************************************************************************\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f2\b \cf2 \cb3 struct
\f3\b0 \cf4  \cf5 ChallengeView\cf4  \{\
  \
    @\cf6 State\cf4  
\f2\b \cf2 private
\f3\b0 \cf4  
\f2\b \cf2 var
\f3\b0 \cf4  \cf7 isAnswered\cf4 : \cf6 Bool\cf4  = 
\f2\b \cf2 false
\f3\b0 \cf4 \
  \
  @\cf6 State\cf4  
\f2\b \cf2 private
\f3\b0 \cf4  
\f2\b \cf2 var
\f3\b0 \cf4  \cf7 isCorrect\cf4 : \cf6 Bool\cf4  = 
\f2\b \cf2 false
\f3\b0 \cf4 \
  \
  @\cf6 State\cf4  
\f2\b \cf2 private
\f3\b0 \cf4  
\f2\b \cf2 var
\f3\b0 \cf4  \cf7 score\cf4 : \cf6 Int\cf4  = \cf8 0
\f1 \cf0 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
struct ScoreView \{\
\
  @Binding private var answered: Int\
\
  private let questions: Int\
\
  init(answered: Binding<Int>, of questions: Int) \{\
    self._answered = answered\
    self.questions = questions\
  \}\
\}\
\
*********************************************************************************************************************\
\
Remember that answered is your state wrapper and _answered is your state value. If you try and set answered to an Int value type, you\'92ll receive an error notifying you that a Binding<Int> and not an Int.\
*********************************************************************************************************************\
\pard\pardeftab720\partightenfactor0

\f3\fs26 \cf9 \cb10 \expnd0\expndtw0\kerning0
\
\cf11 struct\cf9  \cf12 FinanceOutput\cf9 : \cf12 View\cf9  \{\
    @\cf12 Binding\cf9  \cf11 var\cf9  price: \cf12 Double\cf9 \
    @\cf12 Binding\cf9  \cf11 var\cf9  down: \cf12 Double\cf9 \
    @\cf12 Binding\cf9  \cf11 var\cf9  apr: \cf12 Double\cf9 \
\
    \cf11 private\cf9  \cf11 var\cf9  rate: \cf12 Double\cf9  = \cf13 0\cf9 .\cf13 0\cf9 \
\
    \cf11 init\cf9 (price: \cf12 Binding\cf9 <\cf12 Double\cf9 >, down: \cf12 Binding\cf9 <\cf12 Double\cf9 >, apr: \cf12 Binding\cf9 <\cf12 Double\cf9 >, of rate: \cf12 Double\cf9 ) \{\
        \cf11 self\cf9 ._price = price\
        \cf11 self\cf9 ._down = down\
        \cf11 self\cf9 ._apr = apr\
        \cf11 self\cf9 .rate = rate\
    \}\
\
    \cf11 var\cf9  body: some \cf12 View\cf9  \{\
        \cf12 Text\cf9 (\cf13 "\\(apr)"\cf9 ) \
        \cf12 Text\cf9 (\cf13 \'93\\(down)\'94\cf9 ) \
	   \cf12 Text\cf9 (\cf13 \'93\\(price)\'94\cf9 ) \cf14 \
\cf9     \}\
\}\
\
\
\cf11 struct\cf9  \cf12 Input\cf9 : \cf12 View\cf9  \{\
    @\cf12 State\cf9  \cf11 var\cf9  price: \cf12 Double\cf9 \
    @\cf12 State\cf9  \cf11 var\cf9  down: \cf12 Double\cf9 \
    @\cf12 State\cf9  \cf11 var\cf9  apr: \cf12 Double\cf9 \
\
    \cf11 var\cf9  body: some \cf12 View\cf9  \{\
        \cf12 Text\cf9 (\cf13 "\\(price), \\(down), \\(apr)"\cf9 )\
    \}\
\}\
\
**********************************************************************\
\
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf15 \cb16 @State 
\f0\b private
\f1\b0  
\f0\b var
\f1\b0  price: Double = 0.0\cb1 \
\cb16 @State 
\f0\b private
\f1\b0  
\f0\b var
\f1\b0  down: Double = 0.0\cb1 \
\cb16 @State 
\f0\b private
\f1\b0  
\f0\b var
\f1\b0  apr: Double = 0.0\cb1 \
\cb16 @State 
\f0\b private
\f1\b0  
\f0\b var
\f1\b0  rate: Double = 0.0\cb1 \
\cb16 \'a0\cb1 \

\f0\b \cb16 var
\f1\b0  body: 
\f0\b some
\f1\b0  View \{\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0 ScrollView \{\cb1 \
\cb16 \'a0\'a0\'a0\'a0\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 NavigationLink(destination: (FinanceOutput(price: 
\f0\b self
\f1\b0 .$price, down: 
\f0\b self
\f1\b0 .$down, apr: 
\f0\b self
\f1\b0 .$apr, rate: 
\f0\b self
\f1\b0 .$rate))) \{\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Text("Numbers Check")\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}.navigationBarTitle("Monthly Payment")\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cb1 \
\cb16 \'a0\cb1 \
\cb16 But I did try something a bit different because I needed computed variables for my FinanceOutput View:\cb1 \
\cb16 \'a0\cb1 \

\f0\b \cb16 struct
\f1\b0  FinanceOutput: View \{\cb1 \
\cb16 \'a0\'a0\'a0 @Binding 
\f0\b var
\f1\b0  price: Double\cb1 \
\cb16 \'a0\'a0\'a0 @Binding 
\f0\b var
\f1\b0  down: Double\cb1 \
\cb16 \'a0\'a0\'a0 @Binding 
\f0\b var
\f1\b0  apr: Double\cb1 \
\cb16 \'a0\'a0\'a0 
\f0\b private
\f1\b0  
\f0\b var
\f1\b0  rate: Double \{\'a0\'a0\'a0\'a0\'a0\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\b return
\f1\b0  apr/12\cb1 \
\cb16 \'a0\'a0\'a0 \}\cb1 \
\cb16 \'a0\'a0\cb1 \
\cb16 \'a0\'a0\'a0 
\f0\b init
\f1\b0 (price: Binding<Double>, down: Binding<Double>, apr: Binding<Double>, rate: Binding<Double>) \{\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\b self
\f1\b0 ._price = price\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\b self
\f1\b0 ._down = down\cb1 \
\cb16 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f0\b self
\f1\b0 ._apr = apr\cb1 \
\cb16 \'a0\'a0\'a0 \}\
\
****************************************************************************************************\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f2\b\fs24 \cf2 \cb3 \kerning1\expnd0\expndtw0 init
\f3\b0 \cf4 (msrp: \cf6 Binding\cf4 <\cf6 Double\cf4 >, drives: \cf6 Binding\cf4 <\cf6 Double\cf4 >, rebate: \cf6 Binding\cf4 <\cf6 Double\cf4 >, mf: \cf6 Binding\cf4 <\cf6 Double\cf4 >,residualPercent: \cf6 Binding\cf4 <\cf6 Double\cf4 >,salesTax: \cf6 Binding\cf4 <\cf6 Double\cf4 >, term: \cf6 Binding\cf4 <\cf6 Double\cf4 >, salePrice: \cf6 Binding\cf4 <\cf6 Double\cf4 >,pack: \cf6 Binding\cf4 <\cf6 Double\cf4 >,fees: \cf6 Binding\cf4 <\cf6 Double\cf4 >, tradeValue: \cf6 Binding\cf4 <\cf6 Double\cf4 >, negEquity: \cf6 Binding\cf4 <\cf6 Double\cf4 >, of netCapCost: \cf6 Double\cf4 , of residualValue: \cf6 Double\cf4 , of financeFee: \cf6 Double\cf4 , of depreciationFee: \cf6 Double\cf4 , of monthlySalesTax: \cf6 Double\cf4 , of totalLeasePayment: \cf6 Double\cf4 ) \{\
\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _msrp\cf4  = msrp\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _drives\cf4  = drives\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _rebate\cf4  = rebate\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _mf\cf4  = mf\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _residualPercent\cf4  = residualPercent\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _salesTax\cf4  = salesTax\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _term\cf4  = term\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _salePrice\cf4  = salePrice\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _pack\cf4  = pack\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _fees\cf4  = fees\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _tradeValue\cf4  = tradeValue\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 _negEquity\cf4  = negEquity\
\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 netCapCost\cf4  = netCapCost\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 residualValue\cf4  = residualValue\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 financeFee\cf4  = financeFee\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 depreciationFee\cf4  = depreciationFee\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 monthlySalesTax\cf4  = monthlySalesTax\
           
\f2\b \cf2 self
\f3\b0 \cf4 .\cf17 totalLeasePayment\cf4  = totalLeasePayment\
}